/* styles.css will be extracted to main dist folder and is imported in index.html */
/* This file is for importing 3rd party styles  */

// @import 'variables';
// @import '@angular/material/theming';
// Plus imports for other components in your app.

// Include the base styles for Angular Material core. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// @include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue.
// $primary: mat-palette($mat-blue);
// $accent:  mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
// $warn:    mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
// $theme: mat-light-theme($primary, $accent, $warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
// @include angular-material-theme($theme);

// @media only screen and (min-width: 800px) {
//   md-sidenav.mat-sidenav-opened, md-sidenav.mat-sidenav-opening {
//     box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.08),0px 1px 1px 0px rgba(0, 0, 0, 0.07),0px 1px 3px 0px rgba(0, 0, 0, 0.14) !important;
//   }
// }

// * {
//   -webkit-font-smoothing: antialiased;
//   -moz-osx-font-smoothing: grayscale;
// }

// html, body {
//   height: 100%;
//   min-height: 100%;
//   margin: 0;
//   padding: 0;
//   font-family: $primary-font;
//   font-size: 14px;
//   font-weight: 400;
//   line-height: 20px;
// }

// pre {
//   font-family: $primary-font;
//   font-size: 14px;
//   white-space: pre-wrap;
//   white-space: -moz-pre-wrap;
//   white-space: -pre-wrap;
//   white-space: -o-pre-wrap;
//   word-wrap: break-word;
// }

// /**
//   * Basic styles from Material Design Lite for HTML elements
//   */
//   h1, h2, h3, h4, h5, h6, p {
//   margin: 0;
//   padding: 0; }

// h1 small, h2 small, h3 small, h4 small, h5 small, h6 small {
//   font-family: $primary-font;
//   font-size: 56px;
//   font-weight: 400;
//   line-height: 1.35;
//   letter-spacing: -0.02em;
//   opacity: 0.54;
//   font-size: 0.6em; }

// h1 {
//   font-family: $primary-font;
//   font-size: 56px;
//   font-weight: 400;
//   line-height: 1.35;
//   letter-spacing: -0.02em;
//   margin-top: 24px;
//   margin-bottom: 24px; }

// h2 {
//   font-family: $primary-font;
//   font-size: 45px;
//   font-weight: 400;
//   line-height: 48px;
//   margin-top: 24px;
//   margin-bottom: 24px; }

// h3 {
//   font-family: $primary-font;
//   font-size: 34px;
//   font-weight: 400;
//   line-height: 40px;
//   margin-top: 24px;
//   margin-bottom: 24px; }

// h4 {
//   font-family: $primary-font;
//   font-size: 24px;
//   font-weight: 400;
//   line-height: 32px;
//   -moz-osx-font-smoothing: grayscale;
//   margin-top: 24px;
//   margin-bottom: 16px; }

// h5 {
//   font-family: $primary-font;
//   font-size: 20px;
//   font-weight: 500;
//   line-height: 1;
//   letter-spacing: 0.02em;
//   margin-top: 24px;
//   margin-bottom: 16px; }

// h6 {
//   font-family: $primary-font;
//   font-size: 16px;
//   font-weight: 400;
//   line-height: 24px;
//   letter-spacing: 0.04em;
//   margin-top: 24px;
//   margin-bottom: 16px; }

// p {
//   font-size: 14px;
//   font-weight: 400;
//   line-height: 1.5;
//   letter-spacing: 0;
//   margin-bottom: 0; }

// a {
//   font-weight: 500; }

// blockquote {
//   font-family: $primary-font;
//   position: relative;
//   font-size: 24px;
//   font-weight: 300;
//   font-style: italic;
//   line-height: 1.35;
//   letter-spacing: 0.08em; }
//   blockquote:before {
//     position: absolute;
//     left: -0.5em;
//     content: '“'; }
//   blockquote:after {
//     content: '”';
//     margin-left: -0.05em; }

// mark {
//   background-color: #f4ff81; }

// dt {
//   font-weight: 700; }

// address {
//   font-size: 12px;
//   font-weight: 400;
//   line-height: 1;
//   letter-spacing: 0;
//   font-style: normal; }

// ul, ol {
//   font-size: 14px;
//   font-weight: 400;
//   line-height: 24px;
//   letter-spacing: 0; }


/* main.css will be extracted to main dist folder and is imported in index.html */
/* This file is for setting global styles  */
// @import 'variables';


$num-cols: 12 !default;
$gutter-width: 1.5rem !default;
$element-top-margin: $gutter-width/3 !default;
$element-bottom-margin: ($gutter-width*2)/3 !default;

$small-screen-up: 601px !default;
$medium-screen-up: 993px !default;
$large-screen-up: 1201px !default;
$small-screen: 600px !default;
$medium-screen: 992px !default;
$large-screen: 1200px !default;

$medium-and-up: "only screen and (min-width : #{$small-screen-up})" !default;
$large-and-up: "only screen and (min-width : #{$medium-screen-up})" !default;
$extra-large-and-up: "only screen and (min-width : #{$large-screen-up})" !default;
$small-and-down: "only screen and (max-width : #{$small-screen})" !default;
$medium-and-down: "only screen and (max-width : #{$medium-screen})" !default;
$medium-only: "only screen and (min-width : #{$small-screen-up}) and (max-width : #{$medium-screen})" !default;


//grid

.container {
	margin: 0 auto;
	max-width: 1280px;
	width: 90%;
}
@media #{$medium-and-up} {
	.container {
		width: 85%;
	}
}
@media #{$large-and-up} {
	.container {
		width: 70%;
	}
}
.container .row {
	margin-left: (-1 * $gutter-width / 2);
	margin-right: (-1 * $gutter-width / 2);
}

.section {
	padding-top: 1rem;
	padding-bottom: 1rem;

	&.no-pad {
		padding: 0;
	}
	&.no-pad-bot {
		padding-bottom: 0;
	}
	&.no-pad-top {
		padding-top: 0;
	}
}


// Mixins to eliminate code repitition
@mixin reset-offset {
	margin-left: auto;
	left: auto;
	right: auto;
}
@mixin grid-classes($size, $i, $perc) {
	&.offset-#{$size}#{$i} {
		margin-left: $perc;
	}
	&.pull-#{$size}#{$i} {
		right: $perc;
	}
	&.push-#{$size}#{$i} {
		left: $perc;
	}
}


.row {
	margin-left: auto;
	margin-right: auto;
	margin-bottom: 20px;

	// Clear floating children
	&:after {
		content: "";
		display: table;
		clear: both;
	}

	.col {
		float: left;
		box-sizing: border-box;
		padding: 0 $gutter-width / 2;
		min-height: 1px;

		&[class*="push-"],
		&[class*="pull-"] {
			position: relative;
		}

		$i: 1;
		@while $i <= $num-cols {
			$perc: unquote((100 / ($num-cols / $i)) + "%");
			&.s#{$i} {
				width: $perc;
				@include reset-offset;
			}
			$i: $i + 1;
		}

		$i: 1;
		@while $i <= $num-cols {
			$perc: unquote((100 / ($num-cols / $i)) + "%");
			@include grid-classes("s", $i, $perc);
			$i: $i + 1;
		}

		@media #{$medium-and-up} {

			$i: 1;
			@while $i <= $num-cols {
				$perc: unquote((100 / ($num-cols / $i)) + "%");
				&.m#{$i} {
					width: $perc;
					@include reset-offset;
				}
				$i: $i + 1
			}

			$i: 1;
			@while $i <= $num-cols {
				$perc: unquote((100 / ($num-cols / $i)) + "%");
				@include grid-classes("m", $i, $perc);
				$i: $i + 1;
			}
		}

		@media #{$large-and-up} {

			$i: 1;
			@while $i <= $num-cols {
				$perc: unquote((100 / ($num-cols / $i)) + "%");
				&.l#{$i} {
					width: $perc;
					@include reset-offset;
				}
				$i: $i + 1;
			}

			$i: 1;
			@while $i <= $num-cols {
				$perc: unquote((100 / ($num-cols / $i)) + "%");
				@include grid-classes("l", $i, $perc);
				$i: $i + 1;
			}
		}

		@media #{$extra-large-and-up} {

			$i: 1;
			@while $i <= $num-cols {
				$perc: unquote((100 / ($num-cols / $i)) + "%");
				&.xl#{$i} {
					width: $perc;
					@include reset-offset;
				}
				$i: $i + 1;
			}

			$i: 1;
			@while $i <= $num-cols {
				$perc: unquote((100 / ($num-cols / $i)) + "%");
				@include grid-classes("xl", $i, $perc);
				$i: $i + 1;
			}
		}
	}
}